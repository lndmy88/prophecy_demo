{
  "metainfo" : {
    "id" : "1",
    "language" : "scala",
    "fabricId" : "188",
    "frontEndLanguage" : "sql",
    "mode" : "batch",
    "interimMode" : "Full",
    "udfs" : {
      "language" : "scala",
      "udfs" : [ ]
    },
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "configuration" : {
      "common" : {
        "type" : "record",
        "fields" : [ ]
      },
      "fabrics" : {
        "dev" : {
          "type" : "record",
          "fields" : [ ]
        }
      }
    },
    "sparkConf" : [ ],
    "hadoopConf" : [ ],
    "codeMode" : "sparse",
    "buildSystem" : "maven"
  },
  "connections" : [ {
    "id" : "edge0",
    "source" : "eBVHkwaGrGPQdV1LR3RSY",
    "sourcePort" : "nVd9ZO04HI1Rg909Pyhqn",
    "target" : "MVcrfRi0ViUnzK4t8Rk9K",
    "targetPort" : "NzT0MTjq7HpxgEGlGrDFp"
  }, {
    "id" : "edge1",
    "source" : "8x31TS5pJyjpy7L7mkXaM",
    "sourcePort" : "XjtNA0MR1gPKUm105Q1sk",
    "target" : "MVcrfRi0ViUnzK4t8Rk9K",
    "targetPort" : "z0AoY8cz-4OuIxNgFIhg4"
  }, {
    "id" : "edge2",
    "source" : "MVcrfRi0ViUnzK4t8Rk9K",
    "sourcePort" : "-mo2q7MuJQ_3mDj4OKnoK",
    "target" : "VyGpq4dda-lq4tuSSni-U",
    "targetPort" : "shSoDxg781j4DvcSlFT-b"
  }, {
    "id" : "edge3",
    "source" : "VyGpq4dda-lq4tuSSni-U",
    "sourcePort" : "ZGQkgZHpw2Wdht4GPp9wF",
    "target" : "4acGKWemxWAZhWNg-LACw",
    "targetPort" : "8ZNEwqP2yF44aX6CRkvju"
  }, {
    "id" : "edge4",
    "source" : "4acGKWemxWAZhWNg-LACw",
    "sourcePort" : "Emjw7qqzINFYebXfPYTM8",
    "target" : "v2nQ4kvcgPkjrpKj_hwb3",
    "targetPort" : "XYGxY0IsQ5XltTMM2A-Ji"
  } ],
  "processes" : {
    "VyGpq4dda-lq4tuSSni-U" : {
      "id" : "VyGpq4dda-lq4tuSSni-U",
      "component" : "Filter",
      "metadata" : {
        "label" : "Delta data",
        "slug" : "Delta_data",
        "x" : 644,
        "y" : 201,
        "language" : "scala",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "shSoDxg781j4DvcSlFT-b",
          "slug" : "in"
        } ],
        "outputs" : [ {
          "id" : "ZGQkgZHpw2Wdht4GPp9wF",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "columnsSelector" : [ "shSoDxg781j4DvcSlFT-b##current_result_id" ],
        "condition" : {
          "format" : "sql",
          "expression" : "current_result_id IS NULL\r\n"
        }
      }
    },
    "4acGKWemxWAZhWNg-LACw" : {
      "id" : "4acGKWemxWAZhWNg-LACw",
      "component" : "Reformat",
      "metadata" : {
        "label" : "Select columns",
        "slug" : "Select_columns",
        "x" : 764,
        "y" : 188,
        "language" : "scala",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "8ZNEwqP2yF44aX6CRkvju",
          "slug" : "in"
        } ],
        "outputs" : [ {
          "id" : "Emjw7qqzINFYebXfPYTM8",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "columnsSelector" : [ "8ZNEwqP2yF44aX6CRkvju##resultId", "8ZNEwqP2yF44aX6CRkvju##raceId", "8ZNEwqP2yF44aX6CRkvju##driverId", "8ZNEwqP2yF44aX6CRkvju##constructorId", "8ZNEwqP2yF44aX6CRkvju##number", "8ZNEwqP2yF44aX6CRkvju##grid", "8ZNEwqP2yF44aX6CRkvju##position", "8ZNEwqP2yF44aX6CRkvju##positionText", "8ZNEwqP2yF44aX6CRkvju##positionOrder", "8ZNEwqP2yF44aX6CRkvju##points", "8ZNEwqP2yF44aX6CRkvju##laps", "8ZNEwqP2yF44aX6CRkvju##time", "8ZNEwqP2yF44aX6CRkvju##milliseconds", "8ZNEwqP2yF44aX6CRkvju##fastestLap", "8ZNEwqP2yF44aX6CRkvju##rank", "8ZNEwqP2yF44aX6CRkvju##fastestLapTime", "8ZNEwqP2yF44aX6CRkvju##fastestLapSpeed" ],
        "expressions" : [ {
          "target" : "result_id",
          "expression" : {
            "format" : "sql",
            "expression" : "resultId"
          },
          "description" : ""
        }, {
          "target" : "race_id",
          "expression" : {
            "format" : "sql",
            "expression" : "raceId"
          },
          "description" : ""
        }, {
          "target" : "driver_id",
          "expression" : {
            "format" : "sql",
            "expression" : "driverId"
          },
          "description" : ""
        }, {
          "target" : "constructor_id",
          "expression" : {
            "format" : "sql",
            "expression" : "constructorId"
          },
          "description" : ""
        }, {
          "target" : "number",
          "expression" : {
            "format" : "sql",
            "expression" : "number"
          },
          "description" : ""
        }, {
          "target" : "grid",
          "expression" : {
            "format" : "sql",
            "expression" : "grid"
          },
          "description" : ""
        }, {
          "target" : "position",
          "expression" : {
            "format" : "sql",
            "expression" : "position"
          },
          "description" : ""
        }, {
          "target" : "position_text",
          "expression" : {
            "format" : "sql",
            "expression" : "positionText"
          },
          "description" : ""
        }, {
          "target" : "position_order",
          "expression" : {
            "format" : "sql",
            "expression" : "positionOrder"
          },
          "description" : ""
        }, {
          "target" : "points",
          "expression" : {
            "format" : "sql",
            "expression" : "points"
          },
          "description" : ""
        }, {
          "target" : "laps",
          "expression" : {
            "format" : "sql",
            "expression" : "laps"
          },
          "description" : ""
        }, {
          "target" : "time",
          "expression" : {
            "format" : "sql",
            "expression" : "time"
          },
          "description" : ""
        }, {
          "target" : "milliseconds",
          "expression" : {
            "format" : "sql",
            "expression" : "milliseconds"
          },
          "description" : ""
        }, {
          "target" : "fastest_lap",
          "expression" : {
            "format" : "sql",
            "expression" : "fastestLap"
          },
          "description" : ""
        }, {
          "target" : "rank",
          "expression" : {
            "format" : "sql",
            "expression" : "rank"
          },
          "description" : ""
        }, {
          "target" : "fastest_lap_time",
          "expression" : {
            "format" : "sql",
            "expression" : "fastestLapTime"
          },
          "description" : ""
        }, {
          "target" : "fastest_lap_speed",
          "expression" : {
            "format" : "sql",
            "expression" : "fastestLapSpeed"
          },
          "description" : ""
        }, {
          "target" : "ingestion_date",
          "expression" : {
            "format" : "sql",
            "expression" : "current_timestamp()"
          },
          "description" : ""
        } ]
      }
    },
    "v2nQ4kvcgPkjrpKj_hwb3" : {
      "id" : "v2nQ4kvcgPkjrpKj_hwb3",
      "component" : "Target",
      "metadata" : {
        "label" : "Table in the cluster",
        "slug" : "Table_in_the_cluster",
        "x" : 897,
        "y" : 191,
        "language" : "scala",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "XYGxY0IsQ5XltTMM2A-Ji",
          "slug" : "in"
        } ],
        "outputs" : [ ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "datasetId" : "491/datasets/results_des"
      }
    },
    "8x31TS5pJyjpy7L7mkXaM" : {
      "id" : "8x31TS5pJyjpy7L7mkXaM",
      "component" : "Source",
      "metadata" : {
        "label" : "JSON source files",
        "slug" : "JSON_source_files",
        "x" : 358,
        "y" : 280,
        "language" : "scala",
        "phase" : 0,
        "cache" : true,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "XjtNA0MR1gPKUm105Q1sk",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "datasetId" : "491/datasets/results_incr_src"
      }
    },
    "MVcrfRi0ViUnzK4t8Rk9K" : {
      "id" : "MVcrfRi0ViUnzK4t8Rk9K",
      "component" : "Join",
      "metadata" : {
        "label" : "Join_1",
        "slug" : "Join_1",
        "x" : 519,
        "y" : 201,
        "language" : "scala",
        "phase" : 0,
        "cache" : false,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ {
          "id" : "NzT0MTjq7HpxgEGlGrDFp",
          "slug" : "in0"
        }, {
          "id" : "z0AoY8cz-4OuIxNgFIhg4",
          "slug" : "in1"
        } ],
        "outputs" : [ {
          "id" : "-mo2q7MuJQ_3mDj4OKnoK",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "conditions" : [ {
          "alias" : "in1",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.resultId = in0.result_id"
          },
          "joinType" : "right_outer"
        } ],
        "expressions" : [ {
          "_row_id" : null,
          "target" : "constructorId",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.constructorId"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "driverId",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.driverId"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "fastestLap",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.fastestLap"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "fastestLapSpeed",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.fastestLapSpeed"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "fastestLapTime",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.fastestLapTime"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "grid",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.grid"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "laps",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.laps"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "milliseconds",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.milliseconds"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "number",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.number"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "points",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.points"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "position",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.position"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "positionOrder",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.positionOrder"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "positionText",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.positionText"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "raceId",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.raceId"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "rank",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.rank"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "resultId",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.resultId"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "statusId",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.statusId"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "time",
          "expression" : {
            "format" : "sql",
            "expression" : "in1.time"
          },
          "description" : ""
        }, {
          "_row_id" : null,
          "target" : "current_result_id",
          "expression" : {
            "format" : "sql",
            "expression" : "in0.result_id"
          },
          "description" : ""
        } ],
        "activeTab" : "conditions",
        "columnsSelector" : [ "z0AoY8cz-4OuIxNgFIhg4##resultId", "NzT0MTjq7HpxgEGlGrDFp##result_id", "z0AoY8cz-4OuIxNgFIhg4##constructorId", "z0AoY8cz-4OuIxNgFIhg4##driverId", "z0AoY8cz-4OuIxNgFIhg4##fastestLap", "z0AoY8cz-4OuIxNgFIhg4##fastestLapSpeed", "z0AoY8cz-4OuIxNgFIhg4##fastestLapTime", "z0AoY8cz-4OuIxNgFIhg4##grid", "z0AoY8cz-4OuIxNgFIhg4##laps", "z0AoY8cz-4OuIxNgFIhg4##milliseconds", "z0AoY8cz-4OuIxNgFIhg4##number", "z0AoY8cz-4OuIxNgFIhg4##points", "z0AoY8cz-4OuIxNgFIhg4##position", "z0AoY8cz-4OuIxNgFIhg4##positionOrder", "z0AoY8cz-4OuIxNgFIhg4##positionText", "z0AoY8cz-4OuIxNgFIhg4##raceId", "z0AoY8cz-4OuIxNgFIhg4##rank", "z0AoY8cz-4OuIxNgFIhg4##resultId", "z0AoY8cz-4OuIxNgFIhg4##statusId", "z0AoY8cz-4OuIxNgFIhg4##time", "NzT0MTjq7HpxgEGlGrDFp##result_id" ],
        "headAlias" : "in0"
      }
    },
    "eBVHkwaGrGPQdV1LR3RSY" : {
      "id" : "eBVHkwaGrGPQdV1LR3RSY",
      "component" : "Source",
      "metadata" : {
        "label" : "Current data",
        "slug" : "Current_data",
        "x" : 374,
        "y" : 136,
        "language" : "scala",
        "phase" : 0,
        "cache" : true,
        "detailedStats" : false
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "nVd9ZO04HI1Rg909Pyhqn",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "datasetId" : "491/datasets/results_des"
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ]
  }
}